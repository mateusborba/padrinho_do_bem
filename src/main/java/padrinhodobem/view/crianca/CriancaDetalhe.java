/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package padrinhodobem.view.crianca;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import padrinhodobem.Dao.ApadrinhamentoDao;
import padrinhodobem.Dao.NecessidadeDao;
import padrinhodobem.entity.Apadrinhamento;
import padrinhodobem.entity.Crianca;
import padrinhodobem.entity.Necessidade;
import padrinhodobem.entity.Usuario;


/**
 *
 * @author mundo
 */
public class CriancaDetalhe extends javax.swing.JFrame {
    
    private Crianca crianca;
    private Usuario usarioLogado;
    private List<Necessidade> listaNecessidade;

    /**
     * Creates new form CriancaDetalhe
     */
    public CriancaDetalhe(Crianca crianca, Usuario usuario) {
        initComponents();
        
        this.crianca = crianca;
        this.usarioLogado = usuario;
        
        NecessidadeDao necessidadeDb = new NecessidadeDao();
        
        try {
            this.listaNecessidade = necessidadeDb.getNecessidadeCrianca(crianca);
            System.out.println(listaNecessidade);
            
            DefaultComboBoxModel<String> modelo = new DefaultComboBoxModel<>();
            
            for(Necessidade elm : this.listaNecessidade ){
                modelo.addElement(elm.getTipo()); 
            }
            
            System.out.println(modelo);
            inputNecessidade.setModel( modelo);

            labelNome.setText("Nome: " + crianca.getNome());
            labelLocal.setText("Local: "  + crianca.getLocal());
            labelIdade.setText("Idades: "+ Integer.toString(crianca.getIdade()) + " anos");
            labelHistoria.setText(crianca.getHistoria());
            labelHistoria.setEditable(false);
            labelHistoria.setFocusable(false);
        } catch (Exception ex) {
            Logger.getLogger(CriancaDetalhe.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelNome = new javax.swing.JLabel();
        labelIdade = new javax.swing.JLabel();
        labelLocal = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        labelHistoria = new javax.swing.JEditorPane();
        botaoApadrinhar = new javax.swing.JButton();
        inputNecessidade = new javax.swing.JComboBox<>();
        inputMeses = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        labelNome.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        labelNome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelNome.setText("jLabel1");

        labelIdade.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        labelIdade.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelIdade.setText("jLabel2");

        labelLocal.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        labelLocal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelLocal.setText("jLabel3");

        labelHistoria.setBorder(javax.swing.BorderFactory.createTitledBorder("História"));
        jScrollPane1.setViewportView(labelHistoria);

        botaoApadrinhar.setText("Apadrinhar");
        botaoApadrinhar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoApadrinharActionPerformed(evt);
            }
        });

        inputNecessidade.setBorder(javax.swing.BorderFactory.createTitledBorder("Necessidade"));

        inputMeses.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));
        inputMeses.setBorder(javax.swing.BorderFactory.createTitledBorder("Duração em meses"));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(240, 240, 240)
                .addComponent(botaoApadrinhar, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(240, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
                    .addComponent(labelLocal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelIdade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputNecessidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputMeses))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(labelNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(labelIdade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(labelLocal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(inputMeses, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(inputNecessidade, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(botaoApadrinhar)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoApadrinharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoApadrinharActionPerformed
        var meses_value = Integer.parseInt(inputMeses.getValue().toString());
        var necessidade_value = inputNecessidade.getSelectedIndex();
           
       var idNecessidade =  this.listaNecessidade.get(necessidade_value);
        
        Apadrinhamento apadrinhamento = new Apadrinhamento(crianca.getId(),idNecessidade.getId(),this.usarioLogado.getId(), meses_value );
        
        ApadrinhamentoDao apadrinhamentoDb = new ApadrinhamentoDao();
        
        try {
            
            if(meses_value <= 0 ) {
                JOptionPane.showMessageDialog(null, "Selecione a quantidade de meses!", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            if(inputNecessidade.getSelectedItem().toString() == "") {
                JOptionPane.showMessageDialog(null, "Selecione a necessidade", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            if(inputNecessidade.getSelectedItem().toString() == "") {
                JOptionPane.showMessageDialog(null, "Selecione a necessidade", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            apadrinhamentoDb.save(apadrinhamento);
            JOptionPane.showMessageDialog(null, "Apadrinhamento feito com sucesso!");
            this.dispose();
        }
        catch(SQLException ex){
            if(ex.getErrorCode() == 1062) { 
                JOptionPane.showMessageDialog(null, "Não é possível realizar o mesmo tipo de apadrinhamento pra uma criança duas vezes!", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Erro ao salvar os dados no banco!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botaoApadrinharActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoApadrinhar;
    private javax.swing.JSpinner inputMeses;
    private javax.swing.JComboBox<String> inputNecessidade;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JEditorPane labelHistoria;
    private javax.swing.JLabel labelIdade;
    private javax.swing.JLabel labelLocal;
    private javax.swing.JLabel labelNome;
    // End of variables declaration//GEN-END:variables
}
