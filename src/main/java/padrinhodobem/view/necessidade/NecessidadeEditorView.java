/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package padrinhodobem.view.necessidade;

import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import padrinhodobem.Dao.CriancaDao;
import padrinhodobem.Dao.NecessidadeDao;
import padrinhodobem.entity.Crianca;
import padrinhodobem.entity.Necessidade;

/**
 *
 * @author mundo
 */
public class NecessidadeEditorView extends javax.swing.JFrame {
    
    private List<Crianca> listaCrianca;
    
    private Necessidade necessidade;

    /**
     * Creates new form NecessidadeEditorView
     */
    public NecessidadeEditorView() {
        initComponents();
        CriancaDao criancaDb = new CriancaDao();
        
        try {
            this.listaCrianca = criancaDb.getAll();
            DefaultComboBoxModel<String> modelo = new DefaultComboBoxModel<>();
            
            for(Crianca elm : listaCrianca ){
                modelo.addElement(elm.getNome());
                inputCrianca.setModel(modelo);
            }
            
        } catch (Exception ex) {
            Logger.getLogger(NecessidadeEditorView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        this.setTitle("Nova necessidade");
    }
    
    public NecessidadeEditorView(Necessidade necessidade) {
        this.necessidade = necessidade;
        initComponents();
        this.setTitle("Editar necessidade");
         
         
        CriancaDao criancaDb = new CriancaDao();
        
        try {
            this.listaCrianca = criancaDb.getAll();
            DefaultComboBoxModel<String> modelo = new DefaultComboBoxModel<>();
            
            for(Crianca elm : listaCrianca ){
                modelo.addElement(elm.getNome());
                inputCrianca.setModel(modelo);
            }
            
        } catch (Exception ex) {
            Logger.getLogger(NecessidadeEditorView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        this.setTitle("Nova necessidade");
        
        
        for (int i = 0; i < listaCrianca.size(); i++) {
            
            var crianca = listaCrianca.get(i);
            
            if(crianca.getId() == necessidade.GetCriancaId()){
                inputCrianca.setSelectedItem(crianca.getNome());
                inputNecessidade.setSelectedItem(necessidade.getTipo());
            }
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        botaoSalvar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        inputCrianca = new javax.swing.JComboBox<>();
        inputNecessidade = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        botaoSalvar.setBackground(new java.awt.Color(242, 242, 242));
        botaoSalvar.setText("Salvar");
        botaoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(242, 242, 242));
        jButton2.setText("Sair");

        inputCrianca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        inputNecessidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Educação", "Alimentação", "Lazer", "Vestuário" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputCrianca, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botaoSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 205, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(inputNecessidade, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(67, 67, 67))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel2)
                .addGap(31, 31, 31)
                .addComponent(inputCrianca, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(inputNecessidade, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarActionPerformed
        var index = inputCrianca.getSelectedIndex();
        var necessidade_value = inputNecessidade.getSelectedItem().toString();
        var criancaId = this.listaCrianca.get(index).getId();
        
        NecessidadeDao necessidadeDb = new NecessidadeDao();
        
        Necessidade nova_necessidade = new Necessidade(necessidade_value, criancaId);
        
        try {
            necessidadeDb.save(nova_necessidade);
            JOptionPane.showMessageDialog(null, "Dados salvos com sucesso!");
            this.dispose();
        }
        catch(Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getLocalizedMessage());
        }
        
    }//GEN-LAST:event_botaoSalvarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NecessidadeEditorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NecessidadeEditorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NecessidadeEditorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NecessidadeEditorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NecessidadeEditorView().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoSalvar;
    private javax.swing.JComboBox<String> inputCrianca;
    private javax.swing.JComboBox<String> inputNecessidade;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
